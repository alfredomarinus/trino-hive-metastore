version: "3.9"

services:
  postgres:
    image: postgres:14
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - data-stack
  
  minio:
    image: minio/minio
    container_name: minio
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - data-stack
  
  trino:
    image: trinodb/trino:latest
    container_name: trino
    restart: unless-stopped
    depends_on:
      minio:
        condition: service_healthy
      hive-metastore-1:
        condition: service_healthy
    ports:
      - "8090:8080"
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx1G
    volumes:
      - ./trino:/etc/trino:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8090/v1/info"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - data-stack

  hive-metastore-1:
    image: apache/hive:4.0.0
    container_name: hive-metastore-1
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    ports:
    - "9083:9083"
    environment:
      - SERVICE_NAME=metastore
      - HIVE_METASTORE_DB_TYPE=postgres
      - HIVE_METASTORE_DB_HOST=postgres
      - HIVE_METASTORE_DB_PORT=5432
      - HIVE_METASTORE_DB=metastore
      - HIVE_METASTORE_USER=${POSTGRES_USER}
      - HIVE_METASTORE_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      # - hive-metastore-data-1:/opt/hive/data
      - ./conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    command: >
      bash -c "schematool -initSchema -dbType postgres &&
               hive --service metastore"
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/localhost/9083' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - data-stack
  
  # hive-metastore-2:
  #   image: apache/hive:4.0.0
  #   container_name: hive-metastore-2
  #   restart: unless-stopped
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   env_file:
  #     - .env
  #   ports:
  #   - "9084:9084"
  #   environment:
  #     - SERVICE_NAME=metastore
  #     - HIVE_METASTORE_DB_TYPE=postgres
  #     - HIVE_METASTORE_DB_HOST=postgres
  #     - HIVE_METASTORE_DB_PORT=5432
  #     - HIVE_METASTORE_DB=hive-metastore
  #     - HIVE_METASTORE_USER=${POSTGRES_USER}
  #     - HIVE_METASTORE_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - hive-metastore-data-2:/opt/hive/data
  #   command: >
  #     bash -c "schematool -initSchema -dbType postgres &&
  #              hive --service metastore"
  #   healthcheck:
  #     test: ["CMD-SHELL", "bash -c '</dev/tcp/localhost/9084' || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 60s
  #   networks:
  #     - data-stack

volumes:
  postgres-db-volume:
  minio-data:
  # hive-metastore-data-1:
  # hive-metastore-data-2:

networks:
  data-stack:
    driver: bridge
    name: data-stack